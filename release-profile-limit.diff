commit eac509f35ee91e4e955149841ec9143f9750a651
Author: Sida Zhu <zhusidayoyo@hotmail.com>
Date:   Tue Apr 19 17:16:31 2022 +0800

    video: release hevc profile limit

diff --git a/media/base/supported_types.cc b/media/base/supported_types.cc
index 41a4609a2a7a3..8cabd6cab5dfe 100644
--- a/media/base/supported_types.cc
+++ b/media/base/supported_types.cc
@@ -205,23 +205,7 @@ bool IsHevcProfileSupported(const VideoType& type) {
   if (!IsColorSpaceSupported(type.color_space))
     return false;
 
-#if BUILDFLAG(ENABLE_PLATFORM_HEVC)
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_LINUX)
-  return GetSupplementalProfileCache()->IsProfileSupported(type.profile);
-#else
   return true;
-#endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_LINUX)
-#elif BUILDFLAG(ENABLE_PLATFORM_ENCRYPTED_HEVC)
-  // Only encrypted HEVC content is supported, and normally MSE.isTypeSupported
-  // returns false for HEVC. The kEnableClearHevcForTesting flag allows it to
-  // return true to enable a wider array of test scenarios to function properly.
-  if (!base::CommandLine::ForCurrentProcess()->HasSwitch(
-          switches::kEnableClearHevcForTesting)) {
-    return false;
-  }
-  return type.profile == HEVCPROFILE_MAIN || type.profile == HEVCPROFILE_MAIN10;
-#else
-  return false;
 #endif
 }
 
